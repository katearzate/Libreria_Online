[{"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/index.js":"1","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/reportWebVitals.js":"2","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Routing.js":"3","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/main.js":"4","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/navBar.js":"5","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/editoriales.js":"6","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/autores.js":"7","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/libros.js":"8"},{"size":579,"mtime":1610810916703,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610809704165,"results":"11","hashOfConfig":"10"},{"size":737,"mtime":1611343482203,"results":"12","hashOfConfig":"10"},{"size":7625,"mtime":1611218689370,"results":"13","hashOfConfig":"10"},{"size":1721,"mtime":1611343349817,"results":"14","hashOfConfig":"10"},{"size":8109,"mtime":1611290986057,"results":"15","hashOfConfig":"10"},{"size":8405,"mtime":1611290986056,"results":"16","hashOfConfig":"10"},{"size":11902,"mtime":1611343924524,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1n0huas",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/index.js",[],["37","38"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/reportWebVitals.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Routing.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/main.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/navBar.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/editoriales.js",["39","40","41"],"import React from 'react';\nimport {Container, Image,Form, FormControl, FormLabel, Button, Alert, Col, Row, Table} from 'react-bootstrap';\nimport '../../SCSS/libro.scss'\nimport Popup from 'reactjs-popup';\n\nexport default class Editoriales extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            registros: [],\n            id_editorial: \"\",\n            nombre: \"\",\n            direccion: \"\",\n            localidad: \"\",\n            provincia: \"\",\n            url: \"\",\n            telefono: \"\",\n            alerta: false,\n            msgAlerta: \"\",\n            tipoAlerta: \"success\",\n        };\n        this.fetchRegistros();\n    }\n\n    componentDidMount(){\n        this.fetchRegistros()\n    };\n\n    handleChange = (evt) => {\n        this.setState({\n          [evt.target.name]: evt.target.value,\n        });\n    };\n\n    fetchRegistros = () => {\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        fetch(\"http://localhost:3001/editoriales\", {\n          method: \"GET\",\n          headers: headers,\n        })\n          .then((respuesta) => respuesta.json())\n          .then((resultado) => {\n            console.log(\"resultado: \", resultado);\n            this.setState({\n              registros: resultado.response,\n            });\n        })\n        .catch((error) => console.log(\"error: \", error));\n    };\n\n    addRegistro = () => {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        var body = JSON.stringify({\n            id_editorial: this.state.id_editorial,\n            nombre: this.state.nombre,\n            direccion: this.state.direccion,\n            localidad: this.state.localidad,\n            provincia: this.state.provincia,\n            url: this.state.url,\n            telefono: this.state.telefono,\n        })\n        fetch(\"http://localhost:3001/editoriales/insert\", {        //revisar que efectivamente sea ../insert\n            method: \"POST\",\n            headers: headers,\n            body: body\n        }).then((respuesta) => respuesta.json())\n            .then((resultado) => {\n                console.log(resultado);     //para verificar que se haya recibido\n                this.setState({\n                    id_editorial: \"\",\n                    nombre: \"\",\n                    direccion: \"\",\n                    localidad: \"\",\n                    url: \"\",\n                    telefono: \"\",\n                    alerta: true,\n                    msgAlerta: resultado.response,\n                    tipoAlerta: \"success\",\n                    open: false,\n                });\n                this.fetchRegistros();\n            });\n    };\n    \n    editRegistro(){\n\n    }\n\n    updateInput(){\n\n    }\n\n    eliminarRegistro() {\n\n    }\n\n/************************************************************************************************************************/\n\n    render(){\n            return(\n                <div className=\"main\">\n            <Container>\n            <h1 class=\"h1\">Editoriales</h1>\n              {\n                this.state.alerta === true ? (\n                  <Alert variant={this.state.tipoAlerta} onClose={() => {\n                    this.setState({\n                      alerta: false,\n                    })\n                  }} dismissible>\n                    <Alert.Heading>{this.state.msgAlerta}</Alert.Heading>\n                  </Alert>\n                ) : null}\n              <Row>\n                <Table striped bordered hover size=\"sm\" >\n                  <thead>\n                    <tr>\n                      <th class=\"align-middle\">Nombre</th>\n                      <th class=\"align-middle\">Direcci칩n</th>\n                      <th class=\"align-middle\">Localidad</th>\n                      <th class=\"align-middle\">Provincia</th>\n                      <th class=\"align-middle\">URL</th>\n                      <th class=\"align-middle\">Telefono</th>\n                      <th class=\"align-middle\" colSpan=\"2\">Acciones</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.registros.map((item) => {\n                      return (\n                        <tr onClickCapture={() => this.updateInput(item)}>\n                          <td class=\"align-middle\">{item.nombre}</td>\n                          <td class=\"align-middle\">{item.direccion}</td>\n                          <td class=\"align-middle\">{item.localidad}</td>\n                          <td class=\"align-middle\">{item.provincia}</td>\n                          <td class=\"align-middle\">{item.url}</td>\n                          <td class=\"align-middle\">{item.telefono}</td>\n                          <td class=\"align-middle\">\n                            <Button onMouseEnter={() => {this.setState({hoverBtn1: true})}} \n                                    onMouseLeave={() => {this.setState({hoverBtn1: false})}}\n                                    onClick={() => {this.editRegistro(item.id_editorial); this.setState({open: true,});}} variant=\"info\">Actualizar</Button>\n                          </td>\n                          <td class=\"align-middle\">\n                            <Button onMouseEnter={() => {this.setState({hoverBtn1: true})}} \n                                    onMouseLeave={() => {this.setState({hoverBtn1: false})}} \n                                    onClick={() => {this.eliminarRegistro(item.id_editorial)}} variant=\"danger\">Eliminar</Button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Row>\n            </Container>\n            <Popup trigger={<Button variant=\"info\">A침adir nuevo</Button>} open={this.state.open} onClose={() => {this.setState({open: false,});}} position=\"bottom center\">\n                    <div className = \"popup-root\">\n                        <h2>Registro de editorial</h2><hr></hr>\n                        <Container className=\"contenedor-2\">\n                            <div className=\"largos\">\n                                <FormLabel>Nombre:</FormLabel>\n                                <FormControl type=\"text\" name=\"nombre\" placeholder=\"Nombre.\" onChange={this.handleChange} value={this.state.nombre}  required={true}/>\n                                <FormLabel>Direcci칩n:</FormLabel>\n                                <FormControl type=\"text\" name=\"direccion\" placeholder=\"Direcci칩n.\" onChange={this.handleChange} value={this.state.direccion} />\n                                <FormLabel>URL:</FormLabel>\n                                <FormControl type=\"url\" name=\"url\" placeholder=\"URL para contactar al autor.\" onChange={this.handleChange} value={this.state.url}/>    \n                            </div>\n                        </Container>\n                        <Container className=\"contenedor-1\">\n                            <div className=\"propietarios\">\n                                <FormLabel>Localidad:</FormLabel>\n                                <FormControl type=\"text\" name=\"localidad\" placeholder=\"Localidad.\" onChange={this.handleChange} value={this.state.localidad}/>\n                                <FormLabel>Tel칠fono:</FormLabel>\n                                <FormControl type=\"tel\" name=\"telefono\" placeholder=\"Telefono (10 digitos).\" onChange={this.handleChange} value={this.state.telefono}/>\n                            </div>\n                            <div className=\"propietarios\">\n                                <FormLabel>Provincia:</FormLabel>\n                                <FormControl type=\"text\" name=\"provincia\" placeholder=\"Provincia\" onChange={this.handleChange} value={this.state.provincia}/>\n                            </div>\n                        </Container>\n                        <Button type=\"submit\" onClick={this.addRegistro} variant=\"primary\" block>\n                            Agregar editorial\n                        </Button><br></br>\n                    </div>\n                </Popup>\n            </div>\n        );\n    }\n}","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/autores.js",["42","43","44"],"import React from 'react';\nimport {Container, Image,Form, FormControl, FormLabel, Button, Alert, Col, Row, Table} from 'react-bootstrap';\nimport '../../SCSS/libro.scss';\nimport Popup from 'reactjs-popup';\n\n\nexport default class Autores extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            registros: [],\n            id_autor: \"\",\n            nombre: \"\",\n            apellidos: \"\",\n            direccion: \"\",\n            localidad: \"\",\n            provincia: \"\",\n            url: \"\",\n            telefono: \"\",\n            alerta: false,\n            msgAlerta: \"\",\n            tipoAlerta: \"success\",\n        };\n        this.fetchRegistros();\n    }\n\n    componentDidMount(){\n        this.fetchRegistros()\n    };\n\n    handleChange = (evt) => {\n        this.setState({\n          [evt.target.name]: evt.target.value,\n        });\n    };\n\n    fetchRegistros = () => {\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        fetch(\"http://localhost:3001/autores\", {\n          method: \"GET\",\n          headers: headers,\n        })\n          .then((respuesta) => respuesta.json())\n          .then((resultado) => {\n            console.log(\"resultado: \", resultado);\n            this.setState({\n              registros: resultado.response,\n            });\n        })\n        .catch((error) => console.log(\"error: \", error));\n    };\n\n    addRegistro = () => {\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        var body = JSON.stringify({\n            id_autor: this.state.id_autor,\n            nombre: this.state.nombre,\n            apellidos: this.state.apellidos,\n            direccion: this.state.direccion,\n            localidad: this.state.localidad,\n            provincia: this.state.provincia,\n            url: this.state.url,\n            telefono: this.state.telefono,\n        })\n        fetch(\"http://localhost:3001/autores/insert\", {        //revisar que efectivamente sea ../insert\n            method: \"POST\",\n            headers: headers,\n            body: body\n        }).then((respuesta) => respuesta.json())\n            .then((resultado) => {\n                console.log(resultado);    \n                this.setState({\n                    id_autor: \"\",\n                    nombre: \"\",\n                    apellidos: \"\",\n                    direccion: \"\",\n                    localidad: \"\",\n                    url: \"\",\n                    telefono: \"\",\n                    alerta: true,\n                    msgAlerta: resultado.response,\n                    tipoAlerta: \"success\",\n                    open: false,\n                });\n                this.fetchRegistros();\n            });\n    };\n    \n    editRegistro(){\n        \n    }\n\n    updateInput(){\n\n    }\n\n    eliminarRegistro() {\n\n    }\n\n/************************************************************************************************************************/\n\n    render(){\n        return(\n            <div className=\"main\">\n            <Container>\n            <h1 class=\"h1\">Autores</h1>\n              {\n                this.state.alerta === true ? (\n                  <Alert variant={this.state.tipoAlerta} onClose={() => {\n                    this.setState({\n                      alerta: false,\n                    })\n                  }} dismissible>\n                    <Alert.Heading>{this.state.msgAlerta}</Alert.Heading>\n                  </Alert>\n                ) : null}\n              <Row>\n                <Table striped bordered hover size=\"sm\" >\n                  <thead>\n                    <tr>\n                      <th class=\"align-middle\">Nombre</th>\n                      <th class=\"align-middle\">Apellidos</th>\n                      <th class=\"align-middle\">Direcci칩n</th>\n                      <th class=\"align-middle\">Localidad</th>\n                      <th class=\"align-middle\">Provincia</th>\n                      <th class=\"align-middle\">URL</th>\n                      <th class=\"align-middle\">Telefono</th>\n                      <th class=\"align-middle\" colSpan=\"2\">Acciones</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.registros.map((item) => {\n                      return (\n                        <tr onClickCapture={() => this.updateInput(item)}>\n                          <td class=\"align-middle\">{item.nombre}</td>\n                          <td class=\"align-middle\">{item.apellidos}</td>\n                          <td class=\"align-middle\">{item.direccion}</td>\n                          <td class=\"align-middle\">{item.localidad}</td>\n                          <td class=\"align-middle\">{item.provincia}</td>\n                          <td class=\"align-middle\">{item.url}</td>\n                          <td class=\"align-middle\">{item.telefono}</td>\n                          <td class=\"align-middle\">\n                            <Button onMouseEnter={() => {this.setState({hoverBtn1: true})}} \n                                    onMouseLeave={() => {this.setState({hoverBtn1: false})}}\n                                    onClick={() => {this.editRegistro(item.id_autor); this.setState({open: true,});}} variant=\"info\">Actualizar</Button>\n                          </td>\n                          <td class=\"align-middle\">\n                            <Button onMouseEnter={() => {this.setState({hoverBtn1: true})}} \n                                    onMouseLeave={() => {this.setState({hoverBtn1: false})}} \n                                    onClick={() => {this.eliminarRegistro(item.id_autor)}} variant=\"danger\">Eliminar</Button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Row>\n            </Container>\n            <Popup trigger={<Button variant=\"info\">A침adir nuevo</Button>} open={this.state.open} onClose={() => {this.setState({open: false,});}} position=\"bottom center\">\n                <div className = \"popup-root\">\n                    <h2>Registro de autor</h2><hr></hr>\n                    <Container className=\"contenedor-2\">\n                        <div className=\"largos\">\n                            <FormLabel>Nombre(s):</FormLabel>\n                            <FormControl type=\"text\" name=\"nombre\" placeholder=\"Nombre.\" onChange={this.handleChange} value={this.state.nombre} required={true}/>\n                            <FormLabel>Apellidos:</FormLabel>\n                            <FormControl type=\"text\" name=\"apellidos\" placeholder=\"Apellidos.\" onChange={this.handleChange} value={this.state.apellidos} required={true}/>\n                            <FormLabel>Direcci칩n:</FormLabel>\n                            <FormControl type=\"text\" name=\"direccion\" placeholder=\"Direcci칩n.\" onChange={this.handleChange} value={this.state.direccion} required={true}/>\n                            <FormLabel>URL:</FormLabel>\n                            <FormControl type=\"url\" name=\"url\" placeholder=\"URL para contactar al autor.\" onChange={this.handleChange} value={this.state.url}/>    \n                        </div>\n                    </Container>\n                    <Container className=\"contenedor-1\">\n                        <div className=\"propietarios\">\n                            <FormLabel>Localidad:</FormLabel>\n                            <FormControl type=\"text\" name=\"localidad\" placeholder=\"Localidad.\" onChange={this.handleChange} value={this.state.localidad}/>\n                            <FormLabel>Tel칠fono:</FormLabel>\n                            <FormControl type=\"tel\" name=\"telefono\" placeholder=\"Telefono (10 digitos).\" onChange={this.handleChange} value={this.state.telefono}/>\n                        </div>\n                        <div className=\"propietarios\">\n                            <FormLabel>Provincia:</FormLabel>\n                            <FormControl type=\"text\" name=\"provincia\" placeholder=\"Provincia\" onChange={this.handleChange} value={this.state.provincia}/>\n                        </div>\n                    </Container>\n                    <Button type=\"submit\" onClick={this.addRegistro} variant=\"primary\" block>\n                        Agregar autor\n                    </Button><br></br>\n                </div>\n                </Popup>\n            </div>\n        );\n    }\n}","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/libros.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":20,"nodeType":"51","messageId":"52","endLine":2,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":2,"column":26,"nodeType":"51","messageId":"52","endLine":2,"endColumn":30},{"ruleId":"49","severity":1,"message":"54","line":2,"column":71,"nodeType":"51","messageId":"52","endLine":2,"endColumn":74},{"ruleId":"49","severity":1,"message":"50","line":2,"column":20,"nodeType":"51","messageId":"52","endLine":2,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":2,"column":26,"nodeType":"51","messageId":"52","endLine":2,"endColumn":30},{"ruleId":"49","severity":1,"message":"54","line":2,"column":71,"nodeType":"51","messageId":"52","endLine":2,"endColumn":74},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]