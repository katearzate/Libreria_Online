[{"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/index.js":"1","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/reportWebVitals.js":"2","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Routing.js":"3","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/navBar.js":"4","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/main.js":"5","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/libros.js":"6","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/editoriales.js":"7","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/autores.js":"8","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/almacenes.js":"9","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/librosAlmacen.js":"10","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Login.js":"11","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/EncryptionHandler.js":"12","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Register.js":"13","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/clientes.js":"14","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/ProtectedRoutes.js":"15","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Authentication.js":"16","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/carrito.js":"17"},{"size":551,"mtime":1611369039715,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1610809704165,"results":"20","hashOfConfig":"19"},{"size":1786,"mtime":1611569663525,"results":"21","hashOfConfig":"19"},{"size":2551,"mtime":1611569347294,"results":"22","hashOfConfig":"19"},{"size":6661,"mtime":1611459344062,"results":"23","hashOfConfig":"19"},{"size":14932,"mtime":1611568058741,"results":"24","hashOfConfig":"19"},{"size":12569,"mtime":1611542577522,"results":"25","hashOfConfig":"19"},{"size":13231,"mtime":1611542508110,"results":"26","hashOfConfig":"19"},{"size":12063,"mtime":1611543122191,"results":"27","hashOfConfig":"19"},{"size":8021,"mtime":1611543019411,"results":"28","hashOfConfig":"19"},{"size":2181,"mtime":1611568182678,"results":"29","hashOfConfig":"19"},{"size":740,"mtime":1611536237412,"results":"30","hashOfConfig":"19"},{"size":5704,"mtime":1611565821241,"results":"31","hashOfConfig":"19"},{"size":3589,"mtime":1611542967707,"results":"32","hashOfConfig":"19"},{"size":622,"mtime":1611568032621,"results":"33","hashOfConfig":"19"},{"size":340,"mtime":1611567638493,"results":"34","hashOfConfig":"19"},{"size":105,"mtime":1611569477246,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1n0huas",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/index.js",[],["74","75"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/reportWebVitals.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Routing.js",["76"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/navBar.js",["77","78"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/main.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/libros.js",["79"],"import React from 'react';\nimport {Container, Form, FormControl, FormLabel, Button, Alert, Row, Table} from 'react-bootstrap';\nimport '../../SCSS/Base.scss';\nimport Popup from 'reactjs-popup';\nimport AuthApi from '../Authentication';\nimport Cookies from 'js-cookie';\n\nexport default class Libros extends React.Component {\n    static contextType = AuthApi;\n\n    constructor(props){\n        super(props);\n        this.state = {\n            registros: [],\n            id_libro: \"\",\n            titulo: \"\",\n            isbn: \"\",\n            anio_publicacion: \"\",\n            descripcion: \"\",\n            //autor: \"\",\n            //editorial: \"\",\n            //categoria: \"\",\n            precio_electronico: \"\",\n            precio_fisico: \"\",\n            fecha_impresion: \"\",\n            lugar_impresion: \"\",\n            pdf: \"\",\n            portada_url: \"\",\n            alerta: false,\n            msgAlerta: \"\",\n            tipoAlerta: \"success\",\n            open: false,\n        };\n    }\n\n  componentDidMount(){\n      this.fetchRegistros();\n  };\n\n    handleChange = (evt) => {\n        this.setState({\n          [evt.target.name]: evt.target.value,\n        });\n    };\n\n    handlePopupClose = () => {\n      this.setState({\n        id_libro: \"\",\n        isbn: \"\",\n        anio_publicacion: \"\",\n        descripcion: \"\",\n        titulo: \"\",\n        precio_electronico: \"\",\n        precio_fisico: \"\",\n        lugar_impresion: \"\",\n        fecha_impresion: \"\",\n        tamanio: \"\",\n        portada_url: \"\",\n        open: false,\n        update: false,\n        update_message: 'Agregar libro',\n      });\n    }\n\n    editControl = (item) => {\n      console.log(item);\n      this.setState({\n        id_libro: item.id_libro,\n        isbn: item.isbn,\n        anio_publicacion: item.anio_publicacion,\n        descripcion: item.descripcion,\n        titulo: item.titulo,\n        precio_electronico: item.precio_electronico,\n        precio_fisico: item.precio_fisico,\n        lugar_impresion: item.lugar_impresion,\n        fecha_impresion: item.fecha_impresion,\n        tamanio: item.tamanio,\n        portada_url: item.url,\n        update: true,\n        update_message: \"Actualizar libro\",\n        open: true,\n      });\n      console.log(\"id: \", item.id_autor);\n    }\n\n    fetchRegistros = () => {\n      let headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      fetch(\"http://localhost:8000/libros\", {\n        method: \"GET\",\n        headers: headers,\n      })\n        .then((respuesta) => respuesta.json())\n        .then((resultado) => {\n          console.log(\"resultado: \", resultado);\n          this.setState({\n            registros: resultado,\n          });\n      })\n      .catch((error) => console.log(\"error: \", error));\n  };\n\n\n  addRegistro = (e) => {\n      e.preventDefault();\n      var headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n          titulo: this.state.titulo,\n          isbn: this.state.isbn,\n          anio_publicacion: this.state.anio_publicacion,\n          descripcion: this.state.descripcion,\n          //autor: this.state.autor,\n          //editorial: this.state.editorial,\n          //categoria: this.state.categoria,\n          ebook: this.state.ebook,\n          precio_electronico: this.state.precio_electronico,\n          tamanio: this.state.tamanio,\n          papel: this.state.papel,\n          precio_fisico: this.state.precio_fisico,\n          lugar_impresion: this.state.lugar_impresion,\n          fecha_impresion: this.state.fecha_impresion,\n          pdf: this.state.pdf,\n          portada_url: this.state.portada_url,\n      });\n      console.log(\"Solicitut mandada\");\n      fetch(\"http://localhost:8000/libros\", {\n          method: \"POST\",\n          headers: headers,\n          body: body\n      }).then((respuesta) => respuesta.json())\n          .then((resultado) => {\n              console.log(resultado);     //para verificar que se haya recibido\n              this.setState({\n                  id_libro: resultado.id_libro,\n                  titulo: '',\n                  isbn: '',\n                  anio_publicacion: '',\n                  descripcion: '',\n                  precio_electronico: '',\n                  tamanio: '',\n                  precio_fisico: '',\n                  lugar_impresion: '',\n                  fecha_impresion: '',\n                  pdf: '',\n                  portada_url: '',\n                  alerta: true,\n                  msgAlerta: resultado.status,\n                  tipoAlerta: \"success\",\n              })\n          })\n  }\n\n    editRegistro(e){\n      e.preventDefault();\n      var headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      var body = JSON.stringify({\n        titulo: this.state.titulo,\n        isbn: this.state.isbn,\n        anio_publicacion: this.state.anio_publicacion,\n        descripcion: this.state.descripcion,\n        //autor: this.state.autor,\n        //editorial: this.state.editorial,\n        //categoria: this.state.categoria,\n        precio_electronico: this.state.precio_electronico,\n        tamanio: this.state.tamanio,\n        precio_fisico: this.state.precio_fisico,\n        lugar_impresion: this.state.lugar_impresion,\n        fecha_impresion: this.state.fecha_impresion,\n        pdf: this.state.pdf,\n        portada: this.state.portada_url,\n      })\n      console.log(\"A enviar actualizacion: \", body);\n      fetch(`http://localhost:8000/libros/${this.state.id_libro}`, {        //revisar que efectivamente sea ../insert\n          method: \"PUT\",\n          headers: headers,\n          body: body\n      })\n      .then((respuesta) => respuesta.json())\n      .then((resultado) => {\n          console.log(resultado);    \n          this.setState({\n            id_libro: resultado.id_libro,\n            titulo: '',\n            isbn: '',\n            anio_publicacion: '',\n            descripcion: '',\n            precio_electronico: '',\n            tamanio: '',\n            precio_fisico: '',\n            lugar_impresion: '',\n            fecha_impresion: '',\n            pdf: '',\n            portada: '',\n            alerta: true,\n            msgAlerta: resultado.status,\n            tipoAlerta: \"success\",\n            disable_localidades: true,\n            open: false,\n            update: false,\n            update_message: 'Agregar editorial',\n          });\n          this.fetchRegistros();\n      });\n    }\n\n    eliminarRegistro(id_libro) {\n      var headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      fetch(`http://localhost:8000/libros/${id_libro}`, {        //revisar que efectivamente sea ../insert\n          method: \"DELETE\",\n          headers: headers,\n          body: JSON.stringify({}),\n      })\n      .then((respuesta) => respuesta.json())\n      .then((resultado) => {\n          console.log(resultado);    \n          this.setState({\n              alerta: true,\n              msgAlerta: resultado.status,\n              tipoAlerta: \"success\",\n          });\n          this.fetchRegistros();\n      });\n    }\n\n/************************************************************************************************************************/\n\n    render(){\n        return(\n            <div className=\"main\">\n            <Container>\n            <h1 className=\"h1\">Libros</h1>\n              {\n                this.state.alerta === true ? (\n                  <Alert variant={this.state.tipoAlerta} onClose={() => {\n                    this.setState({\n                      alerta: false,\n                    })\n                  }} dismissible>\n                    <Alert.Heading>{this.state.msgAlerta}</Alert.Heading>\n                  </Alert>\n                ) : null}\n              <Row>\n                <Table striped bordered hover size=\"sm\" >\n                  <thead>\n                    <tr>\n                      <th className=\"align-middle\">Id</th>\n                      <th className=\"align-middle\">ISBN</th>\n                      <th className=\"align-middle\">Año Publicacion</th>\n                      <th className=\"align-middle\">Descripcion</th>\n                      <th className=\"align-middle\">Titulo</th>\n                      <th className=\"align-middle\">Precio Fisico</th>\n                      <th className=\"align-middle\">Precio Electronico</th>\n                      <th className=\"align-middle\">Tamaño</th>\n                      <th className=\"align-middle\">Fecha impresion</th>\n                      <th className=\"align-middle\">Lugar Impresion</th>\n                      <th className=\"align-middle\" colSpan=\"2\">Acciones</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.registros.map((item, index) => {\n                      return (\n                        <tr key={item.id_libro}>\n                          <td className=\"align-middle\">{index+1}</td>\n                          <td className=\"align-middle\">{item.titulo}</td>\n                          <td className=\"align-middle\">{item.isbn}</td>\n                          <td className=\"align-middle\">{item.anio_publicacion}</td>\n                          <td className=\"align-middle\">{item.descripcion}</td>\n                          <td className=\"align-middle\">{item.precio_electronico}</td>\n                          <td className=\"align-middle\">{item.tamanio}</td>\n                          <td className=\"align-middle\">{item.precio_fisico}</td>\n                          <td className=\"align-middle\">{item.fecha_impresion}</td>\n                          <td className=\"align-middle\">{item.lugar_impresion}</td>\n                          <td className=\"align-middle\">\n                            <Button onClick={() => {this.editControl(item)}} variant=\"info\">Actualizar</Button>\n                          </td>\n                          <td key=\"button2\" className=\"align-middle\">\n                            <Button onClick={() => {this.eliminarRegistro(item.id_libro)}} variant=\"danger\">Eliminar</Button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Row>\n            </Container>\n            <Button variant=\"info\" onClick={(e) => {this.setState({open: true,})}}>Añadir nuevo</Button>\n            <Popup open={this.state.open} onClose={this.handlePopupClose} position=\"center center\">\n                <Form action=\"http://localhost:3001/libros\" onSubmit={(e) => {this.state.update ?  this.editRegistro(e) : this.addRegistro(e)}}>\n                <h2>Registro de libro</h2><hr></hr>\n                <Container className=\"contenedor-1\">\n                    <Container className=\"propietarios\">\n                        <FormLabel>Titulo:</FormLabel>\n                        <FormControl type=\"text\" name=\"titulo\" placeholder=\"Título.\" onChange={this.handleChange} value={this.state.titulo} required={true}/>\n                        <FormLabel>ISBN:</FormLabel>\n                        <FormControl type=\"text\" name=\"isbn\" placeholder=\"ISBN.\" onChange={this.handleChange} value={this.state.isbn} required={true}/>\n                        <FormLabel>Año de publicación:</FormLabel> \n                        <FormControl type=\"text\" name=\"anio_publicacion\" placeholder=\"Año de publicación.\" onChange={this.handleChange} value={this.state.anio_publicacion}/>\n                    </Container>\n                    <Container className=\"foraneos\">\n                        <FormLabel>Autor:</FormLabel>\n                        <FormControl as=\"select\" name=\"autor\">\n                            <option value=\"\">ejemplo1</option>\n                            <option value=\"\">ejemplo2</option>\n                        </FormControl>\n                        <FormLabel>Editorial:</FormLabel>\n                        <FormControl as=\"select\" name=\"editorial\">\n                            <option value=\"\">ejemplo1</option>\n                            <option value=\"\">ejemplo2</option>\n                        </FormControl>\n                        <FormLabel>Categoria:</FormLabel>\n                        <FormControl as=\"select\" name=\"categoria\">\n                            <option value=\"\">ejemplo1</option>\n                            <option value=\"\">ejemplo2</option>\n                        </FormControl>\n                    </Container>\n                </Container>\n                <Container className=\"contenedor-2\">\n                    <Container className=\"largos\">\n                        <FormLabel>Descripcion:</FormLabel>\n                        <FormControl type=\"text\" name=\"descripcion\" placeholder=\"Descripción.\" onChange={this.handleChange} value={this.state.descripcion || ''}/>\n                        <FormLabel>Portada (URL):</FormLabel>\n                        <FormControl type=\"url\" name=\"portada_url\" placeholder=\"URL de la imagen de portada.\" onChange={this.handleChange} value={this.state.portada_url || ''}/>    \n                    </Container>\n                </Container><br></br>\n                <Container className=\"contenedor-3\">\n                    <Container className=\"electronico\">\n                        <h4>Electrónico:</h4>\n                        <FormLabel>Precio:</FormLabel>\n                        <FormControl type=\"number\" name=\"precio_electronico\" placeholder=\"Precio del ebook.\" onChange={this.handleChange} value={this.state.precio_electronico}/>\n                        <FormLabel>Tamaño:</FormLabel>\n                        <FormControl type=\"number\" name=\"tamanio\"  placeholder=\"Tamaño del archivo en MB.\" onChange={this.handleChange} value={this.state.tamanio}/>\n                        <FormLabel>Archivo:</FormLabel>\n                        <FormControl type=\"file\" name=\"pdf\" placeholder=\"PDF del libro.\" onChange={this.handleChange} value={this.state.pdf}/>\n                    </Container>\n                    <Container className=\"papel\">\n                        <h4>Físico:</h4>\n                        <FormLabel>Precio:</FormLabel>\n                        <FormControl type=\"number\" name=\"precio_fisico\" placeholder=\"Precio del libro impreso.\" onChange={this.handleChange} value={this.state.precio_fisico}/>\n                        <FormLabel>Lugar de impresión:</FormLabel>\n                        <FormControl type=\"text\" name=\"lugar_impresion\" placeholder=\"Lugar de impresión.\" onChange={this.handleChange} value={this.state.lugar_impresion}/>\n                        <FormLabel>Fecha de impresión:</FormLabel>\n                        <FormControl type=\"date\" name=\"fecha_impresion\" onChange={this.handleChange} value={this.state.fecha_impresion}/>\n                    </Container>\n                </Container>\n                <Button type=\"submit\" className=\"submit\" variant=\"primary\" block>{this.state.update_message}</Button><br></br>\n                </Form>\n            </Popup>\n          </div>\n        );\n    }\n}\n","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/editoriales.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/autores.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/almacenes.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/librosAlmacen.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Login.js",["80","81"],"import React from 'react';\n//Importar el archivo que maneja la encriptacion de datos que se enviaran al lado del servidor!.\nimport '../../SCSS/Login.scss';\nimport AuthApi from '../Authentication';\n\nexport default class Login extends React.Component{\n  static contextType = AuthApi;\n  constructor(props) {\n    super(props);\n    this.state = {\n        redirect: null,\n        email: \"\",\n        contrasena: \"\",\n        nombre: '',\n    }; \n  } \n\n  render() {\n    return (\n      <div className=\"login-box\">\n        <h2>Login</h2>\n        <form onSubmit={this.handleSubmit} action=\"http://localhost:8000/login\">\n          <label for=\"email\">Correo Electronico</label>\n          <input value={this.state.email} onChange={this.handleChange} name=\"email\" type=\"text\" placeholder=\"Ingrese correo electronico\"></input>\n          <label for=\"password\">Contraseña</label>\n          <input value={this.state.contrasena} onChange={this.handleChange} name=\"contrasena\" type=\"password\" placeholder=\"Ingrese la contraseña\"></input>\n          <input type=\"submit\" value=\"Log In\"></input>\n          <a href=\"#\">Olvidaste tu contraseña?</a><br></br>\n          <a href=\"/register\">No tienes una cuenta?</a>\n        </form>\n      </div>\n    );\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    let body = JSON.stringify({\n      email: this.state.email, \n      contrasena: this.state.contrasena\n    });\n    console.log(body);\n    fetch(\"http://localhost:8000/login\", {\n      method: 'POST',\n      headers: headers,\n      body: body,\n    })\n    .then((respuesta) => respuesta.json())\n    .then((resultado) => {\n      console.log(resultado);\n      this.setState({\n          redirect: resultado.redirect,\n          nombre: resultado.nombre,\n      });\n      if(resultado.status_code == 1){\n        this.props.history.push(`${this.state.redirect}`, resultado);\n      } else {\n        this.props.history.push(`${this.state.redirect}`);\n      }\n    })\n    .catch((err) => console.log(\"Error: \", err));\n  };\n\n};\n","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/EncryptionHandler.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Register.js",["82","83"],"import React from 'react';\n//Importar el archivo que maneja la encriptacion de datos que se enviaran al lado del servidor!.\nimport { encrypt } from '../EncryptionHandler';\nimport '../../SCSS/Register.scss';\nimport mexico from '../../Data/México.min.json';\n\n\nexport default class Register extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        localidades: [],\n        redirect: null,\n        nombre: \"\",\n        apellidos: \"\",\n        direccion: \"\",\n        email: \"\",\n        telefono: \"\",\n        provincia: \"\",\n        localidad: \"\",\n        contrasena: \"\",\n        recontrasena: \"\",\n        disable_localidades: true,\n    }; \n  } \n\n  estadoChange = (e) => {\n    this.handleChange(e);\n    if (e.target.value !== ''){\n      var municipios = mexico.find(item => item.nombre === e.target.value).municipios;\n      var nombres = [];\n      municipios.forEach(element => {\n        nombres.push(element.nombre);\n      });\n      this.setState({localidades: nombres, disable_localidades: false});\n      } else {\n        this.setState({localidades: [], disable_localidades: true});\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"register-box\">\n        <h2>Registrar</h2>\n        <form onSubmit={this.handleSubmit} action=\"http://localhost:8000/clientes\">\n        <div className=\"form-row\">\n            <div className=\"form-group col\">\n              <label htmlFor=\"nombre\">Nombre</label>\n              <input value={this.state.nombre} onChange={this.handleChange} name=\"nombre\" type=\"text\" placeholder=\"Ingrese su nombre\" required></input>\n            </div>\n            <div className=\"form-group col\">\n              <label htmlFor=\"apellidos\">Apellidos</label>\n              <input value={this.state.apellidos} onChange={this.handleChange} name=\"apellidos\" type=\"text\" placeholder=\"Ingrese sus apeliidos\" required></input>\n            </div>\n          </div>\n          <label htmlFor=\"direccion\">Direccion</label>\n              <input value={this.state.direccion} onChange={this.handleChange} name=\"direccion\" type=\"text\" placeholder=\"Ingrese su direccion\" required></input>\n          <div className=\"form-row\">\n            <div className=\"form-group col\">\n              <label htmlFor=\"email\">Email</label>\n              <input value={this.state.email} onChange={this.handleChange} name=\"email\" type=\"text\" placeholder=\"Ingrese su correo electronico\" required></input>\n            </div>\n            <div className=\"form-group col\">\n              <label htmlFor=\"provincia\">Provincia</label>\n              <select value={this.state.provincia} onChange={this.estadoChange} name=\"provincia\" type=\"text\" placeholder=\"Ingrese su provincia\">\n              <option></option>\n              {mexico.map((estado, index) => {\n                  return (\n                    <option key={index}>{estado.nombre}</option>\n                  );\n                })}\n              </select>\n            </div>\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group col\">\n              <label htmlFor=\"telefono\">Telefono</label>\n              <input value={this.state.telefono} onChange={this.handleChange} name=\"telefono\" type=\"text\" placeholder=\"Ingrese su telefono\"></input>\n            </div>\n            <div className=\"form-group col\">\n              <label htmlFor=\"localidad\">Localidad</label>\n              <select value={this.state.localidad} onChange={this.handleChange} name=\"localidad\" type=\"text\" placeholder=\"Ingrese su localidad\" disabled={this.state.disable_localidades}>\n              <option></option>\n              {this.state.localidades.map((localidad, index) => {\n                return(\n                  <option key={index}>{localidad}</option>\n                );\n              })}\n              </select>\n            </div>\n          </div>\n          <label htmlFor=\"password\">Contraseña</label>\n          <input value={this.state.contrasena} onChange={this.handleChange} name=\"contrasena\" type=\"password\" placeholder=\"Ingrese la contraseña\" required></input>\n          <label htmlFor=\"password\">ReIngrese la contraseña</label>\n          <input value={this.state.recontrasena} onChange={this.handleChange} name=\"recontrasena\" type=\"password\" placeholder=\"Reingrese la contraseña\" required></input>\n          <input type=\"submit\" value=\"Registrar\"></input>\n          <a href=\"/\">Ya tienes una cuenta?</a><br></br>\n          <a href=\"#\">Olvidaste tu contraseña?</a>\n        </form>\n      </div>\n    );\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    let body = JSON.stringify({\n        nombre: this.state.nombre,\n        apellidos: this.state.apellidos,\n        direccion: this.state.direccion,\n        email: this.state.email,\n        telefono: this.state.telefono,\n        contrasena: this.state.contrasena,\n        provincia: this.state.provincia,\n        localidad: this.state.localidad,\n    });\n    console.log(body);\n    fetch(\"http://localhost:8000/clientes\", {\n      method: 'POST',\n      headers: headers,\n      body: body,\n    })\n    .then((respuesta) => respuesta.json())\n    .then((resultado) => {\n      console.log(resultado);\n      this.setState({\n        redirect: resultado.redirect,\n        nombre: \"\",\n        apellidos: \"\",\n        direccion: \"\",\n        email: \"\",\n        telefono: \"\",\n        contrasena: \"\",\n        provincia: \"\",\n        localidad: \"\",\n      });\n      this.props.history.push(`${this.state.redirect}`);\n    })\n    .catch((err) => console.log(\"Error: \", err));\n  };\n\n};\n","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/clientes.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/ProtectedRoutes.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Authentication.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/carrito.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":14,"column":8,"nodeType":"90","messageId":"91","endLine":14,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":25,"column":29,"nodeType":"94","endLine":25,"endColumn":140},{"ruleId":"92","severity":1,"message":"93","line":29,"column":29,"nodeType":"94","endLine":29,"endColumn":112},{"ruleId":"88","severity":1,"message":"95","line":6,"column":8,"nodeType":"90","messageId":"91","endLine":6,"endColumn":15},{"ruleId":"96","severity":1,"message":"97","line":28,"column":11,"nodeType":"94","endLine":28,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":62,"column":32,"nodeType":"100","messageId":"101","endLine":62,"endColumn":34},{"ruleId":"88","severity":1,"message":"102","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":98,"column":11,"nodeType":"94","endLine":98,"endColumn":23},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'AuthApi' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Cookies' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'encrypt' is defined but never used.","no-global-assign","no-unsafe-negation"]